# Generated by Django 2.2.5 on 2021-01-11 18:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccelerationTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('nine_axis_acceleration_x', models.CharField(max_length=20)),
                ('nine_axis_acceleration_y', models.CharField(max_length=20)),
                ('nine_axis_acceleration_z', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'acceleration_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AngularvelocityTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('nine_axis_angular_velocity_x', models.CharField(max_length=20)),
                ('nine_axis_angular_velocity_y', models.CharField(max_length=20)),
                ('nine_axis_angular_velocity_z', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'angularvelocity_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanAccelTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_accel', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_accel_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanBrakeTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_brake', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_brake_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanPositionTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_turn_lever_position', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_position_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanSpeedTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_speed', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_speed_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CanSteeringTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('can_steering', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'can_steering_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CeleryTaskmeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(max_length=50)),
                ('result', models.TextField(blank=True, null=True)),
                ('date_done', models.DateTimeField()),
                ('traceback', models.TextField(blank=True, null=True)),
                ('hidden', models.IntegerField()),
                ('meta', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'celery_taskmeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CeleryTasksetmeta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taskset_id', models.CharField(max_length=255, unique=True)),
                ('result', models.TextField()),
                ('date_done', models.DateTimeField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'celery_tasksetmeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjceleryCrontabschedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.CharField(max_length=64)),
                ('hour', models.CharField(max_length=64)),
                ('day_of_week', models.CharField(max_length=64)),
                ('day_of_month', models.CharField(max_length=64)),
                ('month_of_year', models.CharField(max_length=64)),
            ],
            options={
                'db_table': 'djcelery_crontabschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjceleryIntervalschedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('every', models.IntegerField()),
                ('period', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'djcelery_intervalschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjceleryPeriodictask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('task', models.CharField(max_length=200)),
                ('args', models.TextField()),
                ('kwargs', models.TextField()),
                ('queue', models.CharField(blank=True, max_length=200, null=True)),
                ('exchange', models.CharField(blank=True, max_length=200, null=True)),
                ('routing_key', models.CharField(blank=True, max_length=200, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('enabled', models.IntegerField()),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('total_run_count', models.PositiveIntegerField()),
                ('date_changed', models.DateTimeField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'djcelery_periodictask',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjceleryPeriodictasks',
            fields=[
                ('ident', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('last_update', models.DateTimeField()),
            ],
            options={
                'db_table': 'djcelery_periodictasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjceleryTaskstate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(max_length=64)),
                ('task_id', models.CharField(max_length=36, unique=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('tstamp', models.DateTimeField()),
                ('args', models.TextField(blank=True, null=True)),
                ('kwargs', models.TextField(blank=True, null=True)),
                ('eta', models.DateTimeField(blank=True, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('result', models.TextField(blank=True, null=True)),
                ('traceback', models.TextField(blank=True, null=True)),
                ('runtime', models.FloatField(blank=True, null=True)),
                ('retries', models.IntegerField()),
                ('hidden', models.IntegerField()),
            ],
            options={
                'db_table': 'djcelery_taskstate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjceleryWorkerstate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=255, unique=True)),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'djcelery_workerstate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjkombuMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visible', models.IntegerField()),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('payload', models.TextField()),
            ],
            options={
                'db_table': 'djkombu_message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjkombuQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'db_table': 'djkombu_queue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EquipStatusTbl',
            fields=[
                ('equip_id', models.BigIntegerField(primary_key=True, serialize=False)),
                ('startup_st', models.TextField()),
                ('operation_st', models.TextField()),
                ('mqtt_st', models.TextField()),
                ('device_st', models.TextField()),
            ],
            options={
                'db_table': 'equip_status_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GeomagnetismTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('nine_axis_geomagnetism_x', models.CharField(max_length=20)),
                ('nine_axis_geomagnetism_y', models.CharField(max_length=20)),
                ('nine_axis_geomagnetism_z', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'geomagnetism_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LocationTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('gps_date', models.CharField(max_length=20)),
                ('latitude', models.CharField(max_length=20)),
                ('latitude_direction', models.CharField(max_length=20)),
                ('longitude', models.CharField(max_length=20)),
                ('longitude_direction', models.CharField(max_length=20)),
                ('velocity', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'location_tbl',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SatelliteTbl',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('equip_id', models.BigIntegerField()),
                ('device_id', models.BigIntegerField()),
                ('seqno', models.BigIntegerField()),
                ('measurement_date', models.DateTimeField()),
                ('run_start_date', models.DateTimeField()),
                ('run_end_date', models.DateTimeField()),
                ('type_id', models.BigIntegerField()),
                ('positioning_quality', models.CharField(max_length=20)),
                ('used_satellites', models.CharField(max_length=20)),
                ('reg_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'satellite_tbl',
                'managed': False,
            },
        ),
    ]
